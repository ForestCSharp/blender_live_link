
TODO
	- Clean up dynamic gameplay component system. Make sure all the per-type stuff stays together
		- maybe an init class method?
	- Proper rendering pass setup
		- V1: Current Lighting Pass > SSAO Pass > Tonemapping Pass
	- Separate script to compile shaders and output compiled header
		- (also preprocess to handle include directives)

Tasks:
	- send skeletal mesh data (and animations)
	- don't build up vertex format until you get to c++, the big vtx/idx loops in python are likely very slow and we should just memcpy those if possible

Bugs:
	- last 'mesh' object can't be deleted for some reason
	- delete-all doesn't work either, likely related to above
	- object deletion or undo/redo sends full update?

