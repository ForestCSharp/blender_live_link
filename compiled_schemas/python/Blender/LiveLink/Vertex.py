# automatically generated by the FlatBuffers compiler, do not modify

# namespace: LiveLink

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Vertex(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 32

    # Vertex
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Vertex
    def Position(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # Vertex
    def Normal(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 16)
        return obj


def CreateVertex(builder, position_x, position_y, position_z, position_w, normal_x, normal_y, normal_z, normal_w):
    builder.Prep(4, 32)
    builder.Prep(4, 16)
    builder.PrependFloat32(normal_w)
    builder.PrependFloat32(normal_z)
    builder.PrependFloat32(normal_y)
    builder.PrependFloat32(normal_x)
    builder.Prep(4, 16)
    builder.PrependFloat32(position_w)
    builder.PrependFloat32(position_z)
    builder.PrependFloat32(position_y)
    builder.PrependFloat32(position_x)
    return builder.Offset()
